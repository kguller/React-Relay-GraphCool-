import { LinkAction, ComplexAction, IconableAction } from '../../types';
export declare type Target = 'app' | 'shopify' | 'new' | 'parent';
export interface EASDKBreadcrumb {
    label: string;
    href?: string;
    target?: Target;
    loading?: boolean;
}
export declare function transformBreadcrumb(breadcrumb: LinkAction): EASDKBreadcrumb;
export interface ActionGroup {
    title: string;
    icon?: IconableAction['icon'];
    actions: IconableAction[];
}
export interface EASDKBaseButton {
    label?: string;
    href?: string;
    style?: 'disabled' | 'danger';
    target?: Target;
    loading?: boolean;
    message?(): void;
}
export interface EASDKLinkButton extends EASDKBaseButton {
    type: 'dropdown';
    links: EASDKButton[];
}
export declare type EASDKButton = EASDKBaseButton | EASDKLinkButton;
export declare function transformAction(action: ComplexAction): EASDKButton;
export declare function transformActionGroup(actionGroup: ActionGroup): EASDKLinkButton;
export interface Pagination {
    hasNext?: boolean;
    hasPrevious?: boolean;
    nextURL?: string;
    previousURL?: string;
    onNext?(): void;
    onPrevious?(): void;
}
export declare type PaginationDirection = {
    message(): void;
} | {
    href: string;
};
export interface EASDKPagination {
    next?: PaginationDirection;
    previous?: PaginationDirection;
}
export declare function transformPagination(pagination?: Pagination): EASDKPagination | undefined;
